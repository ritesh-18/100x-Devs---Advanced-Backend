<mxfile host="65bd71144e">
    <diagram id="wDEw6CQCSwH4i6XQcFbt" name="Page-1">
        <mxGraphModel dx="867" dy="1913" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="14" value="Browser" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="60" y="-90" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="390" y="-250" width="420" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="Primary&lt;div&gt;backed&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
                    <mxGeometry x="414" y="-120" width="80" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="message-queue" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="530" y="-100" width="250" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="w1" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
                    <mxGeometry x="580" y="-240" width="50" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="19" value="w2" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
                    <mxGeometry x="690" y="-220" width="50" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="" style="curved=1;endArrow=classic;html=1;exitX=0.824;exitY=-0.133;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="17" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="560" y="-140" as="sourcePoint"/>
                        <mxPoint x="610" y="-190" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="600" y="-160"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="21" value="" style="curved=1;endArrow=classic;html=1;exitX=0.824;exitY=-0.133;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.18;entryY=0.68;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="19" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="746" y="-94" as="sourcePoint"/>
                        <mxPoint x="620" y="-180" as="targetPoint"/>
                        <Array as="points">
                            <mxPoint x="610" y="-150"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="22" value="" style="endArrow=classic;html=1;" parent="1" target="16" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="180" y="-55" as="sourcePoint"/>
                        <mxPoint x="230" y="-105" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="23" value="problem-01&lt;br&gt;some code&lt;br&gt;langiage:&quot;java&quot;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="22" vertex="1" connectable="0">
                    <mxGeometry x="-0.327" y="-2" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="24" value="" style="endArrow=classic;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1.025;exitY=0.338;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="16" target="17" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="420" y="-120" as="sourcePoint"/>
                        <mxPoint x="470" y="-170" as="targetPoint"/>
                        <Array as="points"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="25" value="Leetcode System Without Redis" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
                    <mxGeometry x="20" y="-410" width="190" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="26" value="" style="endArrow=classic;startArrow=classic;html=1;" parent="1" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="18" y="-420" as="sourcePoint"/>
                        <mxPoint x="830" y="-420" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="27" value="you can do autoscaling also like if the number of msg in queues are increasing then you can autoscale the&amp;nbsp;&lt;div&gt;number of workers&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
                    <mxGeometry x="20" y="-380" width="590" height="40" as="geometry"/>
                </mxCell>
                <mxCell id="40" value="so you can simple write a logic in such a way that you can scale if the number of msg increses frequently&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
                    <mxGeometry x="30" y="-330" width="570" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="41" value="But as we all know that leetcode uses poling(short polling) ? ritesh ,what it short polling?&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;You could say its a http req only but after each sec or ms you are sending a req to the server whether the task has been completed (in case of leetcode you obivously wanted to know about output)&lt;br&gt;this is nothing but a short polling&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;is there any good way or another way which is more efficient ?&lt;br&gt;yes there are- websocket(consistent connection needed)&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="70" width="550" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="45" value="What is worker?&lt;div&gt;ans is worker is also a server and you can assume that it use for a specific task&amp;nbsp; , like in leetcode workers are use to execute the code and once its done return the response&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="199" y="-480" width="510" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="46" value="Now lets talk about pubsub+ websocket , how can be use in leetcode" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="180" y="260" width="410" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="48" value="Browser" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="60" y="570" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="49" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="250" y="340" width="470" height="310" as="geometry"/>
                </mxCell>
                <mxCell id="50" value="ws" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
                    <mxGeometry x="310" y="520" width="80" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="51" value="w1" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
                    <mxGeometry x="615" y="350" width="80" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="53" value="pub/sub" style="rhombus;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="460" y="430" width="80" height="80" as="geometry"/>
                </mxCell>
                <mxCell id="55" value="" style="endArrow=classic;html=1;entryX=0.05;entryY=0.7;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="48" target="50">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="330" y="630" as="sourcePoint"/>
                        <mxPoint x="430" y="630" as="targetPoint"/>
                        <Array as="points"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="56" value="Label" style="edgeLabel;resizable=0;html=1;;align=center;verticalAlign=middle;" connectable="0" vertex="1" parent="55">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="57" value="persistent&lt;div&gt;connection&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="55">
                    <mxGeometry x="-0.0775" y="-1" relative="1" as="geometry">
                        <mxPoint as="offset"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="58" value="" style="endArrow=classic;html=1;exitX=0;exitY=1;exitDx=0;exitDy=0;entryX=0.85;entryY=0.313;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="53" target="50">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="420" y="530" as="sourcePoint"/>
                        <mxPoint x="470" y="480" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="60" value="" style="endArrow=none;html=1;entryX=0.05;entryY=0.863;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="53" target="51">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <mxPoint x="360" y="650" as="sourcePoint"/>
                        <mxPoint x="410" y="600" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="61" value="In this case once the&amp;nbsp;&lt;div&gt;worker as been done with code execution&lt;/div&gt;&lt;div&gt;it will send that response to the pub/sub and all the socket connection are connected to pub/sub&amp;nbsp;&lt;/div&gt;&lt;div&gt;so respectively the response will send to the respictive client , we are sending the message you could say we are using client id to send the data&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;fontColor=#000000;darkOpacity=0.05;fillColor=#FFF9B2;strokeColor=none;fillStyle=solid;direction=west;gradientDirection=north;gradientColor=#FFF2A1;shadow=1;size=20;pointerEvents=1;" vertex="1" parent="1">
                    <mxGeometry x="70" y="670" width="210" height="210" as="geometry"/>
                </mxCell>
                <mxCell id="62" value="But ritesh why do we need pub/sub , why cant worker send the res directly to the websocket server&amp;nbsp;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;the resason is simple that we have multiple ws connection instead of filterting and then send the res to that particilare ws server(multiple web socket we have)&lt;/div&gt;&lt;div&gt;we could send to the pub/sub and this guy will take of all the things&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="297" y="690" width="530" height="160" as="geometry"/>
                </mxCell>
                <mxCell id="63" value="" style="shape=link;html=1;" edge="1" parent="1">
                    <mxGeometry width="100" relative="1" as="geometry">
                        <mxPoint y="1010" as="sourcePoint"/>
                        <mxPoint x="1189" y="1000" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="65" value="Lets talk about REDIS?&lt;div&gt;Redis is an open source , in meamory data structures store , used as a database , cache , and&amp;nbsp; message broker&lt;/div&gt;&lt;div&gt;One of the key features of redis is its ability to keep all data in memory , which allows for high performance and low latency access to data.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="1040" width="650" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="66" value="Redis recovers data using &lt;strong data-end=&quot;3909&quot; data-start=&quot;3892&quot;&gt;RDB snapshots&lt;/strong&gt;, &lt;strong data-end=&quot;3923&quot; data-start=&quot;3911&quot;&gt;AOF logs&lt;/strong&gt;, or &lt;strong data-end=&quot;3936&quot; data-start=&quot;3928&quot;&gt;both&lt;/strong&gt;.&lt;br data-end=&quot;3940&quot; data-start=&quot;3937&quot;&gt;&#xa;RDB gives speed; AOF gives durability; hybrid gives both.&lt;br data-end=&quot;4002&quot; data-start=&quot;3999&quot;&gt;&#xa;For production systems, &lt;strong data-end=&quot;4041&quot; data-start=&quot;4028&quot;&gt;AOF + RDB&lt;/strong&gt; is the preferred configuration." style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="30" y="1250" width="531" height="240" as="geometry"/>
                </mxCell>
                <UserObject label="&lt;h2 data-start=&quot;3335&quot; data-end=&quot;3362&quot;&gt; Example Recovery Flow&lt;/h2&gt;&#xa;&lt;ol data-start=&quot;3364&quot; data-end=&quot;3589&quot;&gt;&#xa;&lt;li data-start=&quot;3364&quot; data-end=&quot;3384&quot;&gt;&#xa;&lt;p data-start=&quot;3367&quot; data-end=&quot;3384&quot;&gt;Redis restarts.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3385&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;p data-start=&quot;3388&quot; data-end=&quot;3418&quot;&gt;Checks for &lt;code data-start=&quot;3399&quot; data-end=&quot;3415&quot;&gt;appendonly.aof&lt;/code&gt;:&lt;/p&gt;&#xa;&lt;ul data-start=&quot;3422&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;li data-start=&quot;3422&quot; data-end=&quot;3458&quot;&gt;&#xa;&lt;p data-start=&quot;3424&quot; data-end=&quot;3458&quot;&gt;If found → &lt;strong data-start=&quot;3435&quot; data-end=&quot;3455&quot;&gt;replays commands&lt;/strong&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3462&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;p data-start=&quot;3464&quot; data-end=&quot;3490&quot;&gt;Else → loads &lt;code data-start=&quot;3477&quot; data-end=&quot;3487&quot;&gt;dump.rdb&lt;/code&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;/ul&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3491&quot; data-end=&quot;3541&quot;&gt;&#xa;&lt;p data-start=&quot;3494&quot; data-end=&quot;3541&quot;&gt;If both exist → uses &lt;strong data-start=&quot;3515&quot; data-end=&quot;3538&quot;&gt;AOF (most accurate)&lt;/strong&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3542&quot; data-end=&quot;3589&quot;&gt;&#xa;&lt;p data-start=&quot;3545&quot; data-end=&quot;3589&quot;&gt;Restores memory dataset and resumes service.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;" link="&lt;h2 data-start=&quot;3335&quot; data-end=&quot;3362&quot;&gt; Example Recovery Flow&lt;/h2&gt;&#xa;&lt;ol data-start=&quot;3364&quot; data-end=&quot;3589&quot;&gt;&#xa;&lt;li data-start=&quot;3364&quot; data-end=&quot;3384&quot;&gt;&#xa;&lt;p data-start=&quot;3367&quot; data-end=&quot;3384&quot;&gt;Redis restarts.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3385&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;p data-start=&quot;3388&quot; data-end=&quot;3418&quot;&gt;Checks for &lt;code data-start=&quot;3399&quot; data-end=&quot;3415&quot;&gt;appendonly.aof&lt;/code&gt;:&lt;/p&gt;&#xa;&lt;ul data-start=&quot;3422&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;li data-start=&quot;3422&quot; data-end=&quot;3458&quot;&gt;&#xa;&lt;p data-start=&quot;3424&quot; data-end=&quot;3458&quot;&gt;If found → &lt;strong data-start=&quot;3435&quot; data-end=&quot;3455&quot;&gt;replays commands&lt;/strong&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3462&quot; data-end=&quot;3490&quot;&gt;&#xa;&lt;p data-start=&quot;3464&quot; data-end=&quot;3490&quot;&gt;Else → loads &lt;code data-start=&quot;3477&quot; data-end=&quot;3487&quot;&gt;dump.rdb&lt;/code&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;/ul&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3491&quot; data-end=&quot;3541&quot;&gt;&#xa;&lt;p data-start=&quot;3494&quot; data-end=&quot;3541&quot;&gt;If both exist → uses &lt;strong data-start=&quot;3515&quot; data-end=&quot;3538&quot;&gt;AOF (most accurate)&lt;/strong&gt;.&lt;/p&gt;&#xa;&lt;/li&gt;&#xa;&lt;li data-start=&quot;3542&quot; data-end=&quot;3589&quot;&gt;&#xa;&lt;p data-start=&quot;3545&quot; data-end=&quot;3589&quot;&gt;Restores memory dataset and resumes service.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;" id="67">
                    <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                        <mxGeometry x="80" y="1530" width="490" height="640" as="geometry"/>
                    </mxCell>
                </UserObject>
                <UserObject label="&lt;table&gt;&#xa;&lt;thead&gt;&#xa;&lt;tr&gt;&#xa;&lt;th&gt;Mechanism&lt;/th&gt;&#xa;&lt;th&gt;File&lt;/th&gt;&#xa;&lt;th&gt;Recovery Speed&lt;/th&gt;&#xa;&lt;th&gt;Data Loss Risk&lt;/th&gt;&#xa;&lt;th&gt;Best Use Case&lt;/th&gt;&#xa;&lt;/tr&gt;&#xa;&lt;/thead&gt;&#xa;&lt;tbody&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;RDB&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;&lt;code&gt;dump.rdb&lt;/code&gt;&lt;/td&gt;&#xa;&lt;td&gt;Fast&lt;/td&gt;&#xa;&lt;td&gt;Medium (since last snapshot)&lt;/td&gt;&#xa;&lt;td&gt;Backup, low-write apps&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;AOF&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;&lt;code&gt;appendonly.aof&lt;/code&gt;&lt;/td&gt;&#xa;&lt;td&gt;Moderate&lt;/td&gt;&#xa;&lt;td&gt;Very Low (≤1 sec)&lt;/td&gt;&#xa;&lt;td&gt;Critical data, frequent writes&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;Both&lt;/td&gt;&#xa;&lt;td&gt;Fast&lt;/td&gt;&#xa;&lt;td&gt;Very Low&lt;/td&gt;&#xa;&lt;td&gt;Most production setups&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;/tbody&gt;&#xa;&lt;/table&gt;" link="&lt;table&gt;&#xa;&lt;thead&gt;&#xa;&lt;tr&gt;&#xa;&lt;th&gt;Mechanism&lt;/th&gt;&#xa;&lt;th&gt;File&lt;/th&gt;&#xa;&lt;th&gt;Recovery Speed&lt;/th&gt;&#xa;&lt;th&gt;Data Loss Risk&lt;/th&gt;&#xa;&lt;th&gt;Best Use Case&lt;/th&gt;&#xa;&lt;/tr&gt;&#xa;&lt;/thead&gt;&#xa;&lt;tbody&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;RDB&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;&lt;code&gt;dump.rdb&lt;/code&gt;&lt;/td&gt;&#xa;&lt;td&gt;Fast&lt;/td&gt;&#xa;&lt;td&gt;Medium (since last snapshot)&lt;/td&gt;&#xa;&lt;td&gt;Backup, low-write apps&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;AOF&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;&lt;code&gt;appendonly.aof&lt;/code&gt;&lt;/td&gt;&#xa;&lt;td&gt;Moderate&lt;/td&gt;&#xa;&lt;td&gt;Very Low (≤1 sec)&lt;/td&gt;&#xa;&lt;td&gt;Critical data, frequent writes&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;tr&gt;&#xa;&lt;td&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;&lt;/td&gt;&#xa;&lt;td&gt;Both&lt;/td&gt;&#xa;&lt;td&gt;Fast&lt;/td&gt;&#xa;&lt;td&gt;Very Low&lt;/td&gt;&#xa;&lt;td&gt;Most production setups&lt;/td&gt;&#xa;&lt;/tr&gt;&#xa;&lt;/tbody&gt;&#xa;&lt;/table&gt;" id="68">
                    <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                        <mxGeometry x="210" y="1754" width="560" height="1210" as="geometry"/>
                    </mxCell>
                </UserObject>
                <mxCell id="69" value="One question , you have some data in redis and updation happen after every 10 min , what if admin send a request to update the data in db after 3 min then what would you choose?&lt;div&gt;option 01; clear redis , put data in db&lt;/div&gt;&lt;div&gt;option 02: update data in redis and update data in db&lt;/div&gt;&lt;div&gt;option 03 ; update data in db and then update data in redis&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Ans is&amp;nbsp; you would choose option 01 why lets supppse you have chose 2 , 3rd option there is a posibilty of either of them has failed in option2 if update in redis happend but in db its failed then you have stale data in redis&amp;nbsp;&lt;/div&gt;&lt;div&gt;in option 3 you have updated the data in db but while updating the data in redis its failed then again you have stale data in redis , but with option 1 once you cleared the data in redis any way it will update after 7min but client will never get stale data so this is the best option&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="104.5" y="2390" width="915" height="250" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>